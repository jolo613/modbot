const { MessageEmbed, MessageActionRow, MessageButton } = require("discord.js");
const api = require("../../api/index");
const {cache} = require("../commands/archive");

const config = require("../../config.json");

const listener = {
    name: 'archiveModalManager',
    eventName: 'modalSubmit',
    eventType: 'on',
    listener (modal) {
        if (modal.customId === "archive-create") {
            api.Discord.getUserById(modal.member.id).then(async user => {
                if (user.identity?.id) {
                    const offense = modal.getTextInputValue("offense");
                    const description = modal.getTextInputValue("description");
                    
                    if (cache.hasOwnProperty(user.identity.id)) {
                        cache[user.identity.id].offense = offense;
                        cache[user.identity.id].description = description;

                        let entry = cache[user.identity.id];

                        let resolvable = "";
                        let unresolvable = "";

                        for (let t = 0; t < entry.twitch.length; t++) {
                            let name = entry.twitch[t];
                            try {
                                let accounts = await api.Twitch.getUserByName(name, true);

                                accounts.forEach(account => {
                                    resolvable += `\nTwitch Account: ${account.display_name} (${account.id})`;
                                });
                            } catch (err) {
                                unresolvable += "\nTwitch Name: " + name;
                            }
                        }
                        
                        for (let d = 0; d < entry.discord.length; d++) {
                            let id = entry.discord[d];
                            try {
                                let account = await api.Discord.getUserById(id, false, true);

                                resolvable += `\nDiscord Account: ${account.name}#${account.discriminator} (${account.id})`;
                            } catch (err) {
                                unresolvable += "\nDiscord ID: " + id;
                            }
                        }

                        for (let i = 0; i < entry.identity.length; i++) {
                            let id = entry.identity[i];
                            try {
                                let account = await api.getFullIdentity(id);

                                resolvable += `\nIdentity: ${account.name} (${account.id}) / Accounts [T:${account.twitchAccounts.length},D:${account.discordAccounts.length}]`;
                            } catch (err) {
                                unresolvable += "\nIdentity ID: " + id + " (unresolved identities will not be added)";
                            }
                        }

                        entry.channel.threads.create({
                            type: config.developer ? 'GUILD_PUBLIC_THREAD' : 'GUILD_PRIVATE_THREAD',
                            name: 'sbs-' + user.name.toLowerCase() + "-links",
                            autoArchiveDuration: 60,
                            reason: 'Prompt for Serious Ban Report links + files. Generated by ' + user.id,
                        }).then(thread => {
                            cache[user.identity.id].thread = thread;
                            thread.members.add(modal.member).then(() => {
                                const overview = new MessageEmbed()
                                    .setTitle("Add Archive Entry Overview")
                                    .setDescription("Here's what we have so far!")
                                    .setColor(0x772ce8)
                                    .addField("Offense", "```" + entry.offense + "```")
                                    .addField("Description", "```" + entry.description + "```");
        
                                    if (resolvable !== "")
                                        overview.addField("Resolved Users", "```" + resolvable + "```");
                                    if (unresolvable !== "")
                                        overview.addField("Unresolved Users", "```" + unresolvable + "```");

                                const embed = new MessageEmbed()
                                    .setTitle("Add related links, images, or files!")
                                    .setDescription("Utilize Discord's upload file feature or type links to upload files to this archive submission.")
                                    .setColor(0xa970ff);

                                const submit = new MessageButton()
                                    .setCustomId("submit-archive")
                                    .setLabel("Submit")
                                    .setStyle("SUCCESS");

                                const row = new MessageActionRow()
                                    .addComponents(submit);

                                thread.send({content: ' ', embeds: [overview, embed], components: [row]}).then(message => {
                                    const continueEmbed = new MessageEmbed()
                                        .setTitle("Add files, images, and URLs!")
                                        .setDescription("We've created a new thread to add documents!\n\nVisit it [here](" + message.url + ").")
                                        .setFooter({text: "Information message. This embed will expire in 20 seconds.", iconURL: "https://twitchmodsquad.com/assets/images/logo.webp"});
                                    modal.reply({content: ' ', embeds: [continueEmbed]}).then(() => {
                                        setTimeout(() => {
                                            try {
                                                modal.deleteReply();
                                            } catch (err) {
                                                console.error(err);
                                            }
                                        }, 20000);
                                    });
                                }, err => {
                                    console.error(err);
                                    thread.delete("Failed to send starting message.");
                                });
                            }, err => {
                                console.error(err);
                                thread.delete("Failed to add member to thread.");
                                modal.reply("Failed to add member to thread.");
                            });
                        }, err => {
                            console.error(err);
                            modal.reply("Unable to create a thread in this channel.");
                        });
                    } else {
                        modal.reply({content: "Lost user data. This may have been due to an unexpected restart of ModBot. Please retry", ephemeral: true});
                    }
                } else {
                    modal.reply({content: "Your account isn't properly linked to TMS. Contact <@267380687345025025>", ephemeral: true});
                }
            }, error => {
                modal.reply({content: "Error: " + error, ephemeral: true});
            })
            
        }
    }
};

module.exports = listener;